{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/TextField/TextField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TextField","props","name","value","label","placeholder","onChange","error","inputClass","cx","htmlFor","id","type","NewMovie","state","handleChange","event","regExp","target","setState","prevState","replace","clearInputs","handleSubmit","preventDefault","pattern","test","addMovie","obj","this","onSubmit","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c3517c9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\n\nexport const TextField = (props) => {\n  const {\n    name,\n    value,\n    label,\n    placeholder,\n    onChange,\n    error,\n  } = props;\n  const inputClass = cx('input', {\n    'is-danger': !!error,\n  });\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={name}\n          name={name}\n          className={inputClass}\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n      {error && (\n        <p className=\"help is-danger\">\n          {`* - ${name} is require`}\n        </p>\n      )}\n    </div>\n  );\n};\n\nTextField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  error: PropTypes.bool,\n};\n\nTextField.defaultProps = {\n  placeholder: 'Enter text here',\n  error: false,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '../TextField/TextField';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleChange = (event) => {\n    const regExp = /^\\s/;\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      [name]: value.replace(regExp, ''),\n      error: {\n        ...prevState.error,\n        [name]: false,\n      },\n    }));\n  }\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (\n      !(title === ''\n       || description === ''\n       || (imgUrl === '' || !pattern.test(imgUrl))\n       || (imdbUrl === '' || !pattern.test(imdbUrl))\n       || imdbId === '')\n    ) {\n      this.props.addMovie(movie);\n      this.clearInputs();\n    } else {\n      this.setState((prevState) => {\n        const obj = {\n          title: false,\n          description: false,\n          imgUrl: false,\n          imdbUrl: false,\n          imdbId: false,\n        };\n\n        if (title === '') {\n          obj.title = true;\n        }\n\n        if (description === '') {\n          obj.description = true;\n        }\n\n        if (imgUrl === '' || !pattern.test(imgUrl)) {\n          obj.imgUrl = true;\n        }\n\n        if (imdbUrl === '' || !pattern.test(imdbUrl)) {\n          obj.imdbUrl = true;\n        }\n\n        if (imdbId === '') {\n          obj.imdbId = true;\n        }\n\n        return {\n          error: {\n            title: obj.title,\n            description: obj.description,\n            imgUrl: obj.imgUrl,\n            imdbUrl: obj.imdbUrl,\n            imdbId: obj.imdbId,\n          },\n        };\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      error,\n    } = this.state;\n\n    return (\n      <form name=\"field\" onSubmit={this.handleSubmit}>\n        <TextField\n          name=\"title\"\n          value={title}\n          label=\"Movie title\"\n          placeholder=\"Enter the movie title\"\n          onChange={this.handleChange}\n          error={error.title}\n        />\n        <TextField\n          name=\"description\"\n          value={description}\n          label=\"Movie description\"\n          placeholder=\"Enter the movie description\"\n          onChange={this.handleChange}\n        />\n        <TextField\n          name=\"imgUrl\"\n          value={imgUrl}\n          label=\"Movie imgUrl\"\n          placeholder=\"Enter the movie imgUrl\"\n          onChange={this.handleChange}\n          error={error.imgUrl}\n        />\n        <TextField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          label=\"Movie imdbUrl\"\n          placeholder=\"Enter the movie imdbUrl\"\n          onChange={this.handleChange}\n          error={error.imdbUrl}\n        />\n        <TextField\n          name=\"imdbId\"\n          value={imdbId}\n          label=\"Movie imdbId\"\n          placeholder=\"Enter the movie imdbId\"\n          onChange={this.handleChange}\n          error={error.imdbId}\n        />\n        <button type=\"submit\" className=\"button is-link\">\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}